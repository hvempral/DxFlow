% An example for OPTIMIZATION CASE  
% Optimization by capacitor bank switching and regulator taps 


clc
clear all

DI = [1 0 -1; -1 1 0; 0 -1 1];
D = [1 -1 0; 0 1 -1; -1 0 1];
W = 1/3*[2 1 0; 0 2 1; 1 0 2];

% This particular piece of code executes the importing data and information 
% run InputFileGeneratorR8.m   

% SCase information indicates which Case Scenario to opt for in Studyinfo 
% data. For current version it is always 1 
SCase = 1; 
[TreeTab] = TreeAlgR6(SCase);

% Loading basic element info.              
load Inputdata.mat 
BusD = input.data.Nodes;
BrchD = input.data.Branch; % Branch Data imports
ConfgD = input.data.Configuration ;% Branch data configuration import
LoadsD = input.data.Loads; % Load data import
TrfD = input.data.Transformers; % Transformer data import
StudyInfo = input.data.StudyCase; % STudy cases imports


% Participates in optimization
CapsD = input.data.Caps; % Capacitor data 
RegD = input.data.Regulator; % Regulator data 


% IEEE 13 bus system
MeterdBus = transpose([632, 633, 634, 645, 646, 671, 684, 611, 652, 680, 692, 675])
MeterdBrch = transpose([90, 91, 93,94,95,96,97,98,99,100,101,102,103])

% this is used for time-series. Can be initialized as 1 for optimization case
hr=1; 

% Calling on to three-phase load flow function
[v,I, IL, ILpq, ILc, ILz] = ThreePhLF(hr, SCase, CapsD, RegD);
    
%%
CapsD(1,14:16) = [1,1,1]



% Storing V and I information of interested Bus ID and Branch IDs only
    for ii = 1:length(MeterdBus(:,1))
        vll(:,:,MeterdBus(ii,1),hr) = D*v(:,:,MeterdBus(ii,1));
    end
    
    for ii = 1:length(MeterdBrch(:,1))
        Ibr(:,:, MeterdBrch(ii,1), hr) = I(:,:,MeterdBrch(ii,1),1);
    end        
     
   
% Total load calculated at each load bus
% real and reactive power at each of the load type and load model is
% accounted here (tested)
totalload = zeros(3,1);
for ii=1:length(LoadsD(:,1))
    Iload = ILpq(:,1, LoadsD(ii,1))+ILz(:,1, LoadsD(ii,1))+ILc(:,1, LoadsD(ii,1));
    vloadll = D*v(:,:,LoadsD(ii,1));    
    if LoadsD(ii,2)==0
        totalload = totalload + vloadll.*conj(Iload);
    else 
        totalload = totalload + v(:,:, LoadsD(ii,1)).*conj(Iload);
    end
    
    totalload;
end

%% Calculation of branch feeding system from source 
srcbus = 60
Ssource = v(:,:, srcbus).*conj(Ibr(:,:, 94,hr))
TotalLoss = (real(Ssource - totalload)) % sum of each phase real powers (W)
% run OutputFileGenerator.m



%% Manipulating Capacitor taps 
% Note CapsD (row, 14:16) will modify capacitor bank data. By default for caps on  675 node, its
% is [10 10 10] indicating 20x[10 10 10] = [200 200 200] capacity  

CapsD(1,14:16) = [1,1,1] % if only 20kVAr is needed from it
[v,I, IL, ILpq, ILc, ILz] = ThreePhLF(hr, SCase, CapsD, RegD);
    
% run OutputFileGenerator.m


%% manipulating taps of voltage regulator 
% col 15-> Phase A, col 16-> Phase B and col 17-> Phase C

RegD(1,15:17) = [10,10,10] 
[v,I, IL, ILpq, ILc, ILz] = ThreePhLF(hr, SCase, CapsD, RegD);
% run OutputFileGenerator.m



% finding maximum voltage across all bus
% note third subscript is bus/node id.
abs(max(v(1,:,:))) % A phase voltage max from all bus (careful with the voltage level) here all the bus is 4.16 LL
abs(max(v(2,:,:))) % B phase voltage min from all bus (careful with the voltage level) here all the bus is 4.16 LL
abs(max(v(3,:,:))) % C phase voltage min from all bus (careful with the voltage level) here all the bus is 4.16 LL